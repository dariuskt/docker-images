# base-image-Makefile

IMAGE_BASE_NAME = $(shell basename $(shell pwd))
IMAGE_TYPE = $(shell basename $(shell dirname $(shell pwd)))
IMAGE_FULL_NAME = $(IMAGE_TYPE)/$(IMAGE_BASE_NAME)


COMMANDS = all build test push clean
SILENT_COMMANDS = help status

.PHONY: $(COMMANDS) $(SILENT_COMMANDS)
.SILENT: $(SILENT_COMMANDS)
.NOTPARALLEL:

help:
	echo
	echo "Image name: $(IMAGE_FULL_NAME)"
	echo "Available commands: $(COMMANDS) $(SILENT_COMMANDS)"
	echo


all:
	make build && make test && make push


build:
	@echo
	@echo "# Building image..."
	@echo
	docker build -t $(IMAGE_FULL_NAME) ./
	make status


test:
	@echo
	@echo "# Testing image..."
	@echo
	if [ -d test ];	then\
		run-parts -v -a $(IMAGE_FULL_NAME) test; \
	fi
	@echo
	@echo "Tests passed. ($(shell run-parts --test test | wc -l))"
	@echo


push:
	@echo 
	@echo "# Pushing image to registry..."
	@echo
	docker push $(IMAGE_FULL_NAME)


clean:
	@echo
	@echo "# Removing local containers and images..."
	@echo
	docker stop $(shell docker ps -a | grep ' $(IMAGE_FULL_NAME):' | cut -d' ' -f1) 2>/dev/null || true
	docker rm -f $(shell docker ps -a | grep ' $(IMAGE_FULL_NAME):' | cut -d' ' -f1) 2>/dev/null || true
	bash -c "docker images |\
		 grep '^$(IMAGE_FULL_NAME) ' |\
		 tr -s ' ' ':' |\
		 cut -d: -f2 |\
		 xargs -n1 -IT docker rmi $(IMAGE_FULL_NAME):T 2>/dev/null || true"
	make status


status:
	echo
	echo "# Showing image status..."
	echo
	docker images | grep -i "$(IMAGE_FULL_NAME) " || true
	echo


